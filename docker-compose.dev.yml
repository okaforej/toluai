version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: toluai-postgres-dev
    environment:
      POSTGRES_USER: toluai_dev
      POSTGRES_PASSWORD: toluai_dev_pass123
      POSTGRES_DB: toluai_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U toluai_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: toluai-redis-dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend
    container_name: toluai-backend-dev
    environment:
      DATABASE_URL: postgresql://toluai_dev:toluai_dev_pass123@postgres:5432/toluai_dev
      REDIS_URL: redis://redis:6379
      SECRET_KEY: dev-secret-key-change-in-production
      FLASK_ENV: development
      FLASK_DEBUG: 1
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app/backend
      - ./app:/app/app
      - ./config:/app/config
    command: python run_dev.py
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Frontend Development Server
  frontend:
    image: node:18-alpine
    container_name: toluai-frontend-dev
    working_dir: /app
    environment:
      VITE_API_URL: http://localhost:5001
      NODE_ENV: development
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    command: sh -c "npm install && npm run dev -- --host"
    depends_on:
      - backend

volumes:
  postgres_dev_data:
  frontend_node_modules:

networks:
  default:
    name: toluai-dev-network